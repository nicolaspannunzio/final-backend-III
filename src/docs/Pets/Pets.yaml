paths:
  /api/pets:
    get:
      summary: Get all pets from the database
      tags:
        - Pets
      responses:
        "200":
          description: Successfully retrieved all pets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Pet"
        "500":
          description: Internal server error
    post:
      summary: This endpoint creates a new pet
      tags:
        - Pets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/createPet"
      responses:
        "201":
          description: Pet created successfully
        "500":
          description: Internal server error
  /api/pets/withimage:
    post:
      summary: This endpoint creates a pet with an image
      tags:
        - Pets
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                specie:
                  type: string
                birthDate:
                  type: string
                  format: date
                adopted:
                  type: boolean
                  description: Indicator of whether the pet was adopted
                image:
                  type: string
                  format: binary
      responses:
        "201":
          description: Pet created successfully with image
        "500":
          description: Internal server error
  /api/pets/{pid}:
    get:
      summary: Get a pet by ID
      tags:
        - Pets
      parameters:
        - name: pid
          in: path
          required: true
          description: ID of the pet to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Pet found
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Pet"
        "500":
          description: Internal server error
    put:
      summary: Update a pet by ID
      tags:
        - Pets
      parameters:
        - name: pid
          in: path
          required: true
          description: ID of the pet to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/updatePet"
      responses:
        "200":
          description: Pet updated successfully
        "404":
          description: Pet not found
        "500":
          description: Internal server error
    delete:
      summary: Delete a pet by ID
      tags:
        - Pets
      parameters:
        - name: pid
          in: path
          required: true
          description: ID of the pet to delete
          schema:
            type: string
      responses:
        "200":
          description: Pet deleted successfully
        "404":
          description: Pet not found
        "500":
          description: Internal server error

components:
  schemas:
    Pet:
      type: object
      properties:
        _id:
          type: string
          description: Auto-generated ID by MongoDB
        name:
          type: string
          description: Pet's name
        specie:
          type: string
          description: Pet's species
        birthDate:
          type: string
          format: date
          description: Pet's birth date
        adopted:
          type: boolean
          description: Indicator of whether the pet was adopted
        owner:
          type: string
          description: ID of the user who owns the pet (reference to Users)
        image:
          type: string
          description: URL of the pet's image
      example:
        _id: "507f1f77bcf86cd799439011"
        name: "Peter"
        specie: "Dog"
        birthDate: "2018-09-11"
        adopted: true
        owner: "507f191e810c19729de860ea"
        image: "/public/img/peter.webp"

  requestBodies:
    createPet:
      type: object
      properties:
        name:
          type: string
          description: Pet's name
        specie:
          type: string
          description: Pet's species
        birthDate:
          type: string
          format: date
          description: Pet's birth date
        adopted:
          type: boolean
          description: Indicator of whether the pet was adopted
        image:
          type: string
          description: URL of the pet's image
      example:
        name: "Peter"
        specie: "Dog"
        birthDate: "2018-09-11"
        adopted: true
        image: "/public/img/peter.webp"

    updatePet:
      type: object
      properties:
        name:
          type: string
          description: Pet's name
        specie:
          type: string
          description: Pet's species
        birthDate:
          type: string
          format: date
          description: Pet's birth date
        adopted:
          type: boolean
          description: Indicator of whether the pet was adopted
        image:
          type: string
          description: URL of the pet's image
      example:
        name: "Peter"
        specie: "Dog"
        birthDate: "2018-09-11"
        adopted: true
        image: "/public/img/peter-update.webp"